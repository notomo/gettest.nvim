*gettest.nvim.txt*

==============================================================================
Lua module: gettest                                     *gettest.nvim-gettest*

all_leaves({opts})                                      *gettest.all_leaves()*
  Get all test tree leaves.

  Parameters: ~
    {opts} (table|nil) |gettest.nvim-opts|

  Return: ~
    (table) list of |gettest.nvim-test-leaf|

one_node({row}, {opts})                                   *gettest.one_node()*
  Get a test node from the row.

  Parameters: ~
    {row} (number) the row to specify a test scope (1-index)
    {opts} (table|nil) |gettest.nvim-opts|

  Return: ~
    (table) |gettest.nvim-test-leaf|

scope_root_node({row}, {opts})                     *gettest.scope_root_node()*
  Get a root test node of the scope from the row.

  Parameters: ~
    {row} (number) the row to specify a test scope (1-index)
    {opts} (table|nil) |gettest.nvim-opts|

  Return: ~
    (table) |gettest.nvim-test-leaf|

==============================================================================
TYPES                                                     *gettest.nvim-TYPES*

options for get methods                                    *gettest.nvim-opts*

- {bufnr} (number | nil): target buffer number.
    default: 0
- {language} (string | nil): treesitter parser language.
    default: filetype
- {tool_name} (string | nil): test framework name.

test leaf                                             *gettest.nvim-test-leaf*

- {name} (string): test name
- {scope_node} (userdata):  for example test function's node.
    |lua-treesitter-node|

==============================================================================
SUPPORTED TOOLS                                 *gettest.nvim-SUPPORTED-TOOLS*

- go: `go test`
- lua: `busted`

==============================================================================
EXAMPLES                                               *gettest.nvim-EXAMPLES*

>
  local tests = require("gettest").all_leaves()
  for _, test in ipairs(tests) do
    print(test.name)
    print(test.scope_node:start() + 1) -- test scope start row (1-index)
  end

  local test = require("gettest").one_node(vim.fn.line("."))
  print(test.name)
  print(test.scope_node:start() + 1)
<

==============================================================================
vim:tw=78:ts=8:ft=help
